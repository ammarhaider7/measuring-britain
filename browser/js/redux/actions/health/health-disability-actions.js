// Generated by CoffeeScript 1.10.0
var CONTROLS_CLOSED, CONTROLS_OPENED, DISTRICT_SEARCH, ERROR_RECEIVE_DISABILITY_DATA, FILTER_USED, INIT_DISABILITY, INIT_DISABILITY_OFF, INIT_DONE, MOUSE_OVER, RECEIVE_DISABILITY_DATA, REQUEST_DISABILITY_DATA, TOGGLE_CATEGORY, TOGGLE_SEX, TOGGLE_VALUE, controlsClosed, controlsOpened, disabilityDataParser, disabilityService, districtSearch, errorReceivingeDisabilityData, fetchDisabilityData, filterUsed, initDisability, initDisabilityOff, initDone, mouseOver, receiveDisabilityData, requestDisabilityData, toggleCategory, toggleSex, toggleValue;

disabilityService = require('../../../services/nomis/health/health-disability-service.js');

disabilityDataParser = require('../../../services/nomis/health/health-disability-parser.js');

REQUEST_DISABILITY_DATA = "REQUEST_DISABIlITY_DATA";

RECEIVE_DISABILITY_DATA = "RECEIVE_DISABIlITY_DATA";

TOGGLE_CATEGORY = "D_TOGGLE_CATEGORY";

MOUSE_OVER = "D_MOUSE_OVER";

TOGGLE_VALUE = "D_TOGGLE_VALUE";

ERROR_RECEIVE_DISABILITY_DATA = "ERROR_RECEIVE_DISABIlITY_DATA";

FILTER_USED = "D_FILTER_USED";

CONTROLS_OPENED = "D_CONTROLS_OPENED";

CONTROLS_CLOSED = "D_CONTROLS_CLOSED";

DISTRICT_SEARCH = "D_DISTRICT_SEARCH";

INIT_DISABILITY = "INIT_DISABIlITY";

INIT_DISABILITY_OFF = "INIT_DISABIlITY_OFF";

INIT_DONE = "D_INIT_DONE";

TOGGLE_SEX = "D_TOGGLE_SEX";

toggleValue = function(value) {
  return {
    type: TOGGLE_VALUE,
    value: value
  };
};

toggleCategory = function(category) {
  return {
    type: TOGGLE_CATEGORY,
    category: category
  };
};

toggleSex = function(sex, code) {
  return {
    type: TOGGLE_SEX,
    sex: sex,
    sex_code: code
  };
};

controlsOpened = function() {
  return {
    type: CONTROLS_OPENED,
    isControlsOpen: true
  };
};

districtSearch = function(query) {
  return {
    type: DISTRICT_SEARCH,
    query: query
  };
};

controlsClosed = function() {
  return {
    type: CONTROLS_CLOSED,
    isControlsOpen: false
  };
};

mouseOver = function(mouseOverData) {
  return {
    type: MOUSE_OVER,
    mouseOverData: mouseOverData
  };
};

initDisability = function() {
  return {
    type: INIT_BARS
  };
};

initDisabilityOff = function() {
  return {
    type: INIT_BARS_OFF
  };
};

initDone = function() {
  return {
    type: INIT_DONE
  };
};

requestDisabilityData = function(filterOptions) {
  return {
    type: REQUEST_DISABILITY_DATA,
    filterOptions: filterOptions
  };
};

filterUsed = function() {
  return {
    type: FILTER_USED
  };
};

receiveDisabilityData = function(data) {
  return {
    type: RECEIVE_DISABILITY_DATA,
    data: data,
    receivedAt: Date.now()
  };
};

errorReceivingeDisabilityData = function(error) {
  return {
    type: ERROR_RECEIVE_DISABILITY_DATA,
    error: error
  };
};

fetchDisabilityData = function(filterOptions) {
  return function(dispatch) {
    if (filterOptions != null) {
      dispatch(filterUsed());
    }
    dispatch(requestDisabilityData(filterOptions));
    return disabilityService(filterOptions).done(function(response) {
      var data;
      data = disabilityDataParser(response.obs);
      dispatch(receiveDisabilityData(data));
    }).fail(function(jqxhr, textStatus, error) {
      dispatch(errorReceivingeDisabilityData(textStatus + " : " + error));
    });
  };
};

module.exports = {
  REQUEST_DISABILITY_DATA: REQUEST_DISABILITY_DATA,
  RECEIVE_DISABILITY_DATA: RECEIVE_DISABILITY_DATA,
  TOGGLE_CATEGORY: TOGGLE_CATEGORY,
  MOUSE_OVER: MOUSE_OVER,
  TOGGLE_VALUE: TOGGLE_VALUE,
  ERROR_RECEIVE_DISABILITY_DATA: ERROR_RECEIVE_DISABILITY_DATA,
  FILTER_USED: FILTER_USED,
  CONTROLS_OPENED: CONTROLS_OPENED,
  CONTROLS_CLOSED: CONTROLS_CLOSED,
  DISTRICT_SEARCH: DISTRICT_SEARCH,
  INIT_DISABILITY: INIT_DISABILITY,
  INIT_DISABILITY_OFF: INIT_DISABILITY_OFF,
  INIT_DONE: INIT_DONE,
  TOGGLE_SEX: TOGGLE_SEX,
  toggleSex: toggleSex,
  initDone: initDone,
  initDisability: initDisability,
  initDisabilityOff: initDisabilityOff,
  mouseOver: mouseOver,
  fetchDisabilityData: fetchDisabilityData,
  districtSearch: districtSearch,
  requestDisabilityData: requestDisabilityData,
  receiveDisabilityData: receiveDisabilityData,
  toggleCategory: toggleCategory,
  toggleValue: toggleValue,
  errorReceivingeDisabilityData: errorReceivingeDisabilityData,
  filterUsed: filterUsed,
  controlsOpened: controlsOpened,
  controlsClosed: controlsClosed
};

//# sourceMappingURL=health-disability-actions.map
