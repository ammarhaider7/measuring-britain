// Generated by CoffeeScript 1.10.0
var drawPyramid;

window.d3 = require('d3');

drawPyramid = function(options) {
  var ages, bar_females, bar_females_perc, bar_males, bar_males_perc, container, height, my, outline_females, outline_males, ref, ref1, width;
  container = options.container, ages = options.ages, bar_males = options.bar_males, bar_males_perc = options.bar_males_perc, bar_females = options.bar_females, bar_females_perc = options.bar_females_perc, outline_males = options.outline_males, outline_females = options.outline_females;
  width = (ref = container.offsetWidth) != null ? ref : 750;
  height = (ref1 = container.offsetHeight) != null ? ref1 : 500;
  my = function() {
    var format, g, leftGroup, margin, overlayGroup, percFormat, rightGroup, svg, ticksGroup, x, xAxis, xAxisLeft, xLeft, y;
    margin = {
      top: 25,
      right: 50,
      bottom: 75,
      left: 50,
      middle: 25
    };
    format = d3.format(',');
    percFormat = d3.format('.0f');
    x = function(data) {
      return d3.scale.linear().domain([
        0, d3.max(data, function(d) {
          return d;
        })
      ]).range([0, (width / 2) - margin.middle]);
    };
    xLeft = function(data) {
      return d3.scale.linear().domain([
        d3.max(data, function(d) {
          return d;
        }), 0
      ]).range([0, (width / 2) - margin.middle]);
    };
    y = function(data) {
      return d3.scale.ordinal().domain(d3.range(data.length)).rangeRoundBands([0, height - margin.bottom]);
    };
    xAxis = function(data) {
      return d3.svg.axis().scale(x(data)).orient('bottom').ticks(5).tickFormat(d3.format(',.1%'));
    };
    xAxisLeft = function(data) {
      return d3.svg.axis().scale(xLeft(data)).orient('bottom').ticks(5).tickFormat(d3.format(',.1%'));
    };
    svg = d3.select('.pyramid-svg');
    g = d3.select('.main-group');
    rightGroup = d3.select('.right-group');
    leftGroup = d3.select('.left-group');
    overlayGroup = d3.select('.overlay-group');
    ticksGroup = d3.select('.ticks-group');
    g.attr("transform", "translate(0, " + margin.top + ")");
    overlayGroup.attr("transform", "translate(" + margin.left + ", " + margin.top + ")");
    leftGroup.attr("transform", "translate(0, " + margin.top + ")");
    rightGroup.attr("transform", "translate(" + ((width / 2) + margin.middle) + ", " + margin.top + ")");
    ticksGroup.attr("transform", "translate(" + (width / 2) + ", " + (margin.top / 2.5) + ")");
    rightGroup.selectAll('rect').data(bar_males_perc).enter().append('rect').attr({
      width: function(d) {
        return x(bar_males_perc)(d);
      },
      height: function() {
        return y(bar_males_perc).rangeBand();
      },
      fill: 'rgb(31, 119, 180)',
      stroke: 'rgb(17, 107, 169)',
      x: 0,
      y: function(d, i) {
        return y(bar_males_perc)(i);
      },
      rx: 1,
      ry: function(d, i) {
        return y(bar_males_perc)(i) + 1;
      },
      "class": 'pyramid-bar'
    });
    return leftGroup.selectAll('rect').data(bar_females_perc).enter().append('rect').attr({
      width: function(d) {
        return x(bar_females_perc)(d);
      },
      height: function() {
        return y(bar_females_perc).rangeBand();
      },
      fill: 'rgb(255, 152, 150)',
      stroke: 'rgb(250, 133, 131)',
      x: function(d) {
        return xLeft(bar_females_perc)(d);
      },
      y: function(d, i) {
        return y(bar_females_perc)(i);
      },
      rx: 1,
      ry: function(d, i) {
        return y(bar_females_perc)(i) + 1;
      },
      "class": 'pyramid-bar'
    });
  };
  my.width = function(value) {
    if (!arguments.length) {
      return width;
    }
    width = value;
    return my;
  };
  my.height = function(value) {
    if (!arguments.length) {
      return height;
    }
    height = value;
    return my;
  };
  return my;
};

module.exports = drawPyramid;
