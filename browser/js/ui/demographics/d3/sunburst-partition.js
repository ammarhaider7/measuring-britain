// Generated by CoffeeScript 1.10.0
var d3, drawSunburst;

d3 = require('d3');

drawSunburst = function(options) {
  var arc, arcTween, colour, container, data, height, init, margin, my, nested_data, partition, radius, ref, ref1, stash, total_item, update, width;
  container = options.container, data = options.data;
  nested_data = data.d3_nested_data;
  total_item = data.total_item;
  width = (ref = container.offsetWidth) != null ? ref : 750;
  height = (ref1 = container.offsetHeight) != null ? ref1 : 500;
  radius = Math.min(width, height / 2);
  colour = d3.scale.category20c();
  margin = {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    middle: 0
  };
  partition = d3.layout.partition().sort(null).size([2 * Math.PI, radius * radius]).value(function(d) {
    return 1;
  });
  arc = d3.svg.arc().startAngle(function(d) {
    return d.x;
  }).endAngle(function(d) {
    return d.x + d.dx;
  }).innerRadius(function(d) {
    return Math.sqrt(d.y);
  }).outerRadius(function(d) {
    return Math.sqrt(d.y + d.dy);
  });
  arcTween = function(a) {
    var i;
    i = d3.interpolate({
      x: a.x0,
      dx: a.dx0
    }, a);
    return function(t) {
      var b;
      b = i(t);
      a.x0 = b.x;
      a.dx0 = b.dx;
      return arc(b);
    };
  };
  stash = function(d) {
    d.x0 = d.x;
    return d.dx0 = d.dx;
  };
  my = function() {
    return init();
  };
  init = function() {
    var main_group, path, svg;
    svg = d3.select('.sunburst-svg');
    main_group = svg.select('.main-group');
    main_group.attr('transform', "translate(" + (width / 2) + ", " + (height * 0.52) + ")");
    return path = main_group.datum(nested_data).selectAll('path').data(partition.nodes).enter().append('path').attr({
      display: function(d) {
        if (d.depth) {
          return null;
        } else {
          return 'none';
        }
      },
      d: arc
    }).style('stroke', '#fff').style('fill', function(d) {
      console.log('sunburst > d');
      console.log(d);
      return colour((d.values ? d : d.parent).key);
    }).style('fill-rule', 'evenodd').each(stash);
  };
  update = function() {};
  my.width = function(value) {
    if (!arguments.length) {
      return width;
    }
    width = value;
    return my;
  };
  my.height = function(value) {
    if (!arguments.length) {
      return height;
    }
    height = value;
    return my;
  };
  return my;
};

module.exports = drawSunburst;

//# sourceMappingURL=sunburst-partition.map
