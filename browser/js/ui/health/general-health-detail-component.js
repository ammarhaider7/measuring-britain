// Generated by CoffeeScript 1.10.0
var GenHealthDetailComponent, format, percFormat;

format = d3.format('.3s');

percFormat = d3.format(',.2%');

GenHealthDetailComponent = React.createClass({displayName: "GenHealthDetailComponent",
  render: function() {
    return React.createElement("div", null, React.createElement("table", {
      "className": "table table-condensed table-hover table-striped mb-oxygen"
    }, React.createElement("tbody", null, React.createElement("tr", null, React.createElement("td", null, (this.props.activeCategory === 'default' ? 'Geography:' : this.props.activeCategory + ':')), React.createElement("td", null, React.createElement("strong", null, (this.props.activeValue === 'default' ? 'England \& Wales' : this.props.activeValue)))), ((function() {

      /*<tr>
        <td>Ethnicity:</td> 
        <td><strong>{ if @props.mouseOverData.key? then @props.mouseOverData.key else 'All' }</strong></td>
      </tr>
       */
    })()))), React.createElement("table", {
      "className": "table table-condensed table-hover table-striped mb-oxygen"
    }, React.createElement("thead", null, React.createElement("tr", null, React.createElement("th", null, "Age group"), React.createElement("th", null, "Total population"), React.createElement("th", null, "Total bad health"), React.createElement("th", null, "% bad health"))), React.createElement("tbody", null, React.createElement("tr", null, React.createElement("td", null, "Age 0 to 15:"), React.createElement("td", null, React.createElement("strong", null, (this.props.data.total_item != null ? format(this.props.data.total_item.total_age_detail[0].values.total_population) : void 0))), React.createElement("td", null, React.createElement("strong", null, (this.props.data.total_item != null ? format(this.props.data.total_item.total_age_detail[0].values.bad_health) : void 0))), React.createElement("td", null, React.createElement("strong", null, (this.props.data.total_item != null ? percFormat(this.props.data.total_item.total_age_detail[0].values.bad_health / this.props.data.total_item.total_age_detail[0].values.total_population) : void 0)))), React.createElement("tr", null, React.createElement("td", null, "Age 16 to 24:"), React.createElement("td", null, React.createElement("strong", null, (this.props.data.total_item != null ? format(this.props.data.total_item.total_age_detail[1].values.total_population) : void 0))), React.createElement("td", null, React.createElement("strong", null, (this.props.data.total_item != null ? format(this.props.data.total_item.total_age_detail[1].values.bad_health) : void 0))), React.createElement("td", null, React.createElement("strong", null, (this.props.data.total_item != null ? percFormat(this.props.data.total_item.total_age_detail[1].values.bad_health / this.props.data.total_item.total_age_detail[1].values.total_population) : void 0)))), React.createElement("tr", null, React.createElement("td", null, "Age 25 to 34:"), React.createElement("td", null, React.createElement("strong", null, (this.props.data.total_item != null ? format(this.props.data.total_item.total_age_detail[2].values.total_population) : void 0))), React.createElement("td", null, React.createElement("strong", null, (this.props.data.total_item != null ? format(this.props.data.total_item.total_age_detail[2].values.bad_health) : void 0))), React.createElement("td", null, React.createElement("strong", null, (this.props.data.total_item != null ? percFormat(this.props.data.total_item.total_age_detail[2].values.bad_health / this.props.data.total_item.total_age_detail[2].values.total_population) : void 0)))), React.createElement("tr", null, React.createElement("td", null, "Age 35 to 49:"), React.createElement("td", null, React.createElement("strong", null, (this.props.data.total_item != null ? format(this.props.data.total_item.total_age_detail[3].values.total_population) : void 0))), React.createElement("td", null, React.createElement("strong", null, (this.props.data.total_item != null ? format(this.props.data.total_item.total_age_detail[3].values.bad_health) : void 0))), React.createElement("td", null, React.createElement("strong", null, (this.props.data.total_item != null ? percFormat(this.props.data.total_item.total_age_detail[3].values.bad_health / this.props.data.total_item.total_age_detail[3].values.total_population) : void 0)))), React.createElement("tr", null, React.createElement("td", null, "Age 50 to 64:"), React.createElement("td", null, React.createElement("strong", null, (this.props.data.total_item != null ? format(this.props.data.total_item.total_age_detail[4].values.total_population) : void 0))), React.createElement("td", null, React.createElement("strong", null, (this.props.data.total_item != null ? format(this.props.data.total_item.total_age_detail[4].values.bad_health) : void 0))), React.createElement("td", null, React.createElement("strong", null, (this.props.data.total_item != null ? percFormat(this.props.data.total_item.total_age_detail[4].values.bad_health / this.props.data.total_item.total_age_detail[4].values.total_population) : void 0)))), React.createElement("tr", null, React.createElement("td", null, "Age 65 and over:"), React.createElement("td", null, React.createElement("strong", null, (this.props.data.total_item != null ? format(this.props.data.total_item.total_age_detail[5].values.total_population) : void 0))), React.createElement("td", null, React.createElement("strong", null, (this.props.data.total_item != null ? format(this.props.data.total_item.total_age_detail[5].values.bad_health) : void 0))), React.createElement("td", null, React.createElement("strong", null, (this.props.data.total_item != null ? percFormat(this.props.data.total_item.total_age_detail[5].values.bad_health / this.props.data.total_item.total_age_detail[5].values.total_population) : void 0)))), React.createElement("tr", null, React.createElement("td", null, "Total population:"), React.createElement("td", null, React.createElement("strong", null, (this.props.data.total_item != null ? format(this.props.data.total_item.population) : ''))), React.createElement("td", null, React.createElement("strong", null, (this.props.data.total_item != null ? format(this.props.data.total_item.number_bad_health) : ''))), React.createElement("td", null, React.createElement("strong", null, (this.props.data.total_item != null ? percFormat(this.props.data.total_item.percent_bad_health) : '')))))));
  }
});

module.exports = GenHealthDetailComponent;

//# sourceMappingURL=general-health-detail-component.map
