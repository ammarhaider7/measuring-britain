// Generated by CoffeeScript 1.10.0
var CONTROLS_CLOSED, CONTROLS_OPENED, DISTRICT_SEARCH, ERROR_RECEIVE_GEN_HEALTH_DATA, FILTER_USED, HIGHLIGHT_LINE, INIT_DONE, INIT_GEN_HEALTH, INIT_GEN_HEALTH_OFF, MOUSE_OVER, RECEIVE_GEN_HEALTH_DATA, REQUEST_GEN_HEALTH_DATA, TOGGLE_CATEGORY, TOGGLE_VALUE, UNHIGHLIGHT_LINE, controlsClosed, controlsOpened, districtSearch, errorReceivingeGenHealthData, fetchGenHealthData, filterUsed, genHealthDataParser, genHealthService, highlightLine, initDone, initGenHealth, initGenHealthOff, mouseOver, receiveGenHealthData, requestGenHealthData, toggleCategory, toggleValue, unHighlightLine;

genHealthService = require('../../../services/nomis/health/general-health-service.js');

genHealthDataParser = require('../../../services/nomis/health/general-health-parser.js');

REQUEST_GEN_HEALTH_DATA = "REQUEST_GEN_HEALTH_DATA";

RECEIVE_GEN_HEALTH_DATA = "RECEIVE_GEN_HEALTH_DATA";

TOGGLE_CATEGORY = "H_TOGGLE_CATEGORY";

MOUSE_OVER = "H_MOUSE_OVER";

HIGHLIGHT_LINE = "HIGHLIGHT_LINE";

UNHIGHLIGHT_LINE = "UNHIGHLIGHT_LINE";

TOGGLE_VALUE = "H_TOGGLE_VALUE";

ERROR_RECEIVE_GEN_HEALTH_DATA = "ERROR_RECEIVE_GEN_HEALTH_DATA";

FILTER_USED = "H_FILTER_USED";

CONTROLS_OPENED = "H_CONTROLS_OPENED";

CONTROLS_CLOSED = "H_CONTROLS_CLOSED";

DISTRICT_SEARCH = "H_DISTRICT_SEARCH";

INIT_GEN_HEALTH = "INIT_GEN_HEALTH";

INIT_GEN_HEALTH_OFF = "INIT_GEN_HEALTH_OFF";

INIT_DONE = "INIT_DONE";

toggleValue = function(value) {
  return {
    type: TOGGLE_VALUE,
    value: value
  };
};

toggleCategory = function(category) {
  return {
    type: TOGGLE_CATEGORY,
    category: category
  };
};

controlsOpened = function() {
  return {
    type: CONTROLS_OPENED,
    isControlsOpen: true
  };
};

districtSearch = function(query) {
  return {
    type: DISTRICT_SEARCH,
    query: query
  };
};

controlsClosed = function() {
  return {
    type: CONTROLS_CLOSED,
    isControlsOpen: false
  };
};

mouseOver = function(mouseOverData) {
  return {
    type: MOUSE_OVER,
    mouseOverData: mouseOverData
  };
};

highlightLine = function(ethnicity) {
  return {
    type: HIGHLIGHT_LINE,
    ethnicity: ethnicity
  };
};

unHighlightLine = function(ethnicity, index) {
  return {
    type: UNHIGHLIGHT_LINE,
    ethnicity: ethnicity,
    index: index
  };
};

initGenHealth = function() {
  return {
    type: INIT_BARS
  };
};

initGenHealthOff = function() {
  return {
    type: INIT_BARS_OFF
  };
};

initDone = function() {
  return {
    type: INIT_DONE
  };
};

requestGenHealthData = function(filterOptions) {
  return {
    type: REQUEST_GEN_HEALTH_DATA,
    filterOptions: filterOptions
  };
};

filterUsed = function() {
  return {
    type: FILTER_USED
  };
};

receiveGenHealthData = function(data) {
  return {
    type: RECEIVE_GEN_HEALTH_DATA,
    data: data,
    receivedAt: Date.now()
  };
};

errorReceivingeGenHealthData = function(error) {
  return {
    type: ERROR_RECEIVE_GEN_HEALTH_DATA,
    error: error
  };
};

fetchGenHealthData = function(filterOptions) {
  return function(dispatch) {
    if (filterOptions != null) {
      dispatch(filterUsed());
    }
    dispatch(requestGenHealthData(filterOptions));
    return genHealthService(filterOptions).done(function(response) {
      var data;
      data = genHealthDataParser(response.obs);
      dispatch(receiveGenHealthData(data));
    }).fail(function(jqxhr, textStatus, error) {
      dispatch(errorReceivingeGenHealthData(textStatus + " : " + error));
    });
  };
};

module.exports = {
  REQUEST_GEN_HEALTH_DATA: REQUEST_GEN_HEALTH_DATA,
  RECEIVE_GEN_HEALTH_DATA: RECEIVE_GEN_HEALTH_DATA,
  TOGGLE_CATEGORY: TOGGLE_CATEGORY,
  MOUSE_OVER: MOUSE_OVER,
  HIGHLIGHT_LINE: HIGHLIGHT_LINE,
  UNHIGHLIGHT_LINE: UNHIGHLIGHT_LINE,
  TOGGLE_VALUE: TOGGLE_VALUE,
  ERROR_RECEIVE_GEN_HEALTH_DATA: ERROR_RECEIVE_GEN_HEALTH_DATA,
  FILTER_USED: FILTER_USED,
  CONTROLS_OPENED: CONTROLS_OPENED,
  CONTROLS_CLOSED: CONTROLS_CLOSED,
  DISTRICT_SEARCH: DISTRICT_SEARCH,
  INIT_GEN_HEALTH: INIT_GEN_HEALTH,
  INIT_GEN_HEALTH_OFF: INIT_GEN_HEALTH_OFF,
  INIT_DONE: INIT_DONE,
  initDone: initDone,
  initGenHealth: initGenHealth,
  initGenHealthOff: initGenHealthOff,
  mouseOver: mouseOver,
  highlightLine: highlightLine,
  unHighlightLine: unHighlightLine,
  fetchGenHealthData: fetchGenHealthData,
  districtSearch: districtSearch,
  requestGenHealthData: requestGenHealthData,
  receiveGenHealthData: receiveGenHealthData,
  toggleCategory: toggleCategory,
  toggleValue: toggleValue,
  errorReceivingeGenHealthData: errorReceivingeGenHealthData,
  filterUsed: filterUsed,
  controlsOpened: controlsOpened,
  controlsClosed: controlsClosed
};

//# sourceMappingURL=general-health-actions.map
