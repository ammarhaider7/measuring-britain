// Generated by CoffeeScript 1.10.0
var ADD_FILTER, MOUSE_OVER, RECEIVE_PYRAMID_DATA, REMOVE_FILTER, REQUEST_PYRAMID_DATA, TOGGLE_CATEGORY, TOGGLE_OUTLINE_CATEGORY, TOGGLE_VALUE, objectAssign, pyramid, pyramidChart, ref;

objectAssign = require('object-assign');

ref = require('../actions/demographics-actions.js'), RECEIVE_PYRAMID_DATA = ref.RECEIVE_PYRAMID_DATA, REQUEST_PYRAMID_DATA = ref.REQUEST_PYRAMID_DATA, TOGGLE_CATEGORY = ref.TOGGLE_CATEGORY, TOGGLE_VALUE = ref.TOGGLE_VALUE, MOUSE_OVER = ref.MOUSE_OVER, ADD_FILTER = ref.ADD_FILTER, REMOVE_FILTER = ref.REMOVE_FILTER, TOGGLE_OUTLINE_CATEGORY = ref.TOGGLE_OUTLINE_CATEGORY;

pyramid = {
  chartName: 'pyramid',
  isFetching: false,
  category: 'default',
  value: 'default',
  data: [],
  outlineFilter: false,
  outlineCategory: 'default'
};

pyramidChart = function(state, action) {
  if (state == null) {
    state = pyramid;
  }
  switch (action.type) {
    case TOGGLE_CATEGORY:
      return objectAssign({}, state, {
        category: action.category
      });
    case TOGGLE_VALUE:
      return objectAssign({}, state, {
        value: action.value
      });
    case REQUEST_PYRAMID_DATA:
      return objectAssign({}, state, {
        isFetching: true
      });
    case RECEIVE_PYRAMID_DATA:
      return objectAssign({}, state, {
        isFetching: false,
        data: action.data,
        lastUpdated: action.receivedAt
      });
    case MOUSE_OVER:
      return objectAssign({}, state, {
        mouseOptions: action.mouseOverOptions
      });
    case ADD_FILTER:
      return objectAssign({}, state, {
        outlineFilter: true
      });
    case REMOVE_FILTER:
      return objectAssign({}, state, {
        outlineFilter: false
      });
    case TOGGLE_OUTLINE_CATEGORY:
      return objectAssign({}, state, {
        outlineCategory: action.category
      });
    default:
      return state;
  }
};

module.exports = pyramidChart;
