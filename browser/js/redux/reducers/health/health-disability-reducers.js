// Generated by CoffeeScript 1.10.0
var CONTROLS_CLOSED, CONTROLS_OPENED, DISTRICT_SEARCH, DisabilityChart, ERROR_RECEIVE_DISABILITY_DATA, FILTER_USED, INIT_DISABILITY, INIT_DISABILITY_OFF, INIT_DONE, MOUSE_OVER, RECEIVE_DISABILITY_DATA, REQUEST_DISABILITY_DATA, TOGGLE_CATEGORY, TOGGLE_SEX, TOGGLE_VALUE, disabilityInitState, objectAssign, ref;

objectAssign = require('object-assign');

ref = require('../../actions/health/health-disability-actions.js'), REQUEST_DISABILITY_DATA = ref.REQUEST_DISABILITY_DATA, RECEIVE_DISABILITY_DATA = ref.RECEIVE_DISABILITY_DATA, TOGGLE_CATEGORY = ref.TOGGLE_CATEGORY, MOUSE_OVER = ref.MOUSE_OVER, TOGGLE_VALUE = ref.TOGGLE_VALUE, ERROR_RECEIVE_DISABILITY_DATA = ref.ERROR_RECEIVE_DISABILITY_DATA, FILTER_USED = ref.FILTER_USED, CONTROLS_OPENED = ref.CONTROLS_OPENED, CONTROLS_CLOSED = ref.CONTROLS_CLOSED, DISTRICT_SEARCH = ref.DISTRICT_SEARCH, INIT_DISABILITY = ref.INIT_DISABILITY, INIT_DISABILITY_OFF = ref.INIT_DISABILITY_OFF, INIT_DONE = ref.INIT_DONE, TOGGLE_SEX = ref.TOGGLE_SEX;

disabilityInitState = {
  chartName: 'disabilityChart',
  isFetching: false,
  isDefault: true,
  isControlsOpen: false,
  _category: {
    value: 'countries',
    label: 'Geography (Countries)'
  },
  _value: {
    value: '2092957703',
    label: 'England \& Wales'
  },
  activeCategory: 'Geography (Countries)',
  activeValue: 'England \& Wales',
  data: {},
  error: false,
  updateDisability: false,
  district_query: 'default',
  _mouseOverData: {},
  init_disability: false,
  sex: 'All',
  sex_code: 0,
  init_done: false
};

DisabilityChart = function(state, action) {
  if (state == null) {
    state = disabilityInitState;
  }
  switch (action.type) {
    case TOGGLE_CATEGORY:
      return objectAssign({}, state, {
        _category: action.category,
        updateDisability: false,
        init_disability: false
      });
    case TOGGLE_VALUE:
      return objectAssign({}, state, {
        _value: action.value,
        updateDisability: false,
        init_disability: false
      });
    case TOGGLE_SEX:
      return objectAssign({}, state, {
        sex: action.sex,
        sex_code: action.sex_code,
        updateDisability: false,
        init_disability: false
      });
    case CONTROLS_OPENED:
      return objectAssign({}, state, {
        isControlsOpen: true,
        updateDisability: false,
        init_disability: false
      });
    case CONTROLS_CLOSED:
      return objectAssign({}, state, {
        isControlsOpen: false,
        updateDisability: false,
        init_disability: false
      });
    case DISTRICT_SEARCH:
      return objectAssign({}, state, {
        district_query: action.query,
        updateDisability: false,
        init_disability: false
      });
    case FILTER_USED:
      return objectAssign({}, state, {
        isDefault: false,
        updateDisability: false,
        init_disability: false
      });
    case INIT_DISABILITY:
      return objectAssign({}, state, {
        init_disability: true
      });
    case INIT_DISABILITY_OFF:
      return objectAssign({}, state, {
        init_disability: false
      });
    case INIT_DONE:
      return objectAssign({}, state, {
        init_done: true,
        updateDisability: false
      });
    case REQUEST_DISABILITY_DATA:
      return objectAssign({}, state, {
        isFetching: true,
        updateDisability: false,
        init_disability: false
      });
    case RECEIVE_DISABILITY_DATA:
      return objectAssign({}, state, {
        isFetching: false,
        data: action.data,
        activeCategory: state._category.label,
        activeValue: state._value.label,
        updateDisability: true,
        init_disability: false
      });
    case ERROR_RECEIVE_DISABILITY_DATA:
      return objectAssign({}, state, {
        isFetching: false,
        error: true,
        errorMessage: action.error,
        init_disability: false
      });
    case MOUSE_OVER:
      return objectAssign({}, state, {
        updateDisability: false,
        _mouseOverData: action.mouseOverData,
        init_disability: false,
        updateTable: true
      });
    default:
      return state;
  }
};

module.exports = DisabilityChart;
